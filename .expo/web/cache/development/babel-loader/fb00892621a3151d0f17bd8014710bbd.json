{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport NewPostScren from \"./../../screens/NewPostScreen\";\nimport LoginScreen from \"./../../screens/LoginScreen\";\nimport SignupScreen from \"./../../screens/SignupScreen\";\nimport CommentsScreen from \"../../screens/CommentsScreen\";\nimport BottomTabs from \"./BottomTabs\";\nimport Save from \"../Add/Save\";\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../../redux/actions/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignedInStack = function SignedInStack(props) {\n  var Stack = createStackNavigator();\n  var screenOptions = {\n    headerShown: false\n  };\n  useEffect(function () {\n    props.clearData();\n    props.fetchUser();\n    props.fetchUserPosts();\n    props.fetchUserFollowing();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"BottomTabs\",\n      screenOptions: screenOptions,\n      children: [_jsx(Stack.Screen, {\n        name: \"BottomTabs\",\n        component: BottomTabs\n      }), _jsx(Stack.Screen, {\n        name: \"Save\",\n        component: Save\n      }), _jsx(Stack.Screen, {\n        name: \"NewPostScreen\",\n        component: NewPostScren\n      }), _jsx(Stack.Screen, {\n        name: \"LoginScreen\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"CommentsScreen\",\n        component: CommentsScreen\n      })]\n    })\n  });\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(null, mapDispatchProps)(SignedInStack);","map":{"version":3,"sources":["C:/Users/sim2a/Documents/codes/instagram-clone/components/navigation/SignedInStack.js"],"names":["React","useEffect","NavigationContainer","createStackNavigator","connect","bindActionCreators","NewPostScren","LoginScreen","SignupScreen","CommentsScreen","BottomTabs","Save","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","SignedInStack","props","Stack","screenOptions","headerShown","mapDispatchProps","dispatch"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAUC,kBAAV,QAAoC,OAApC;AAEA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,SAASC,SAAT,EAAmBC,cAAnB,EAAkCC,kBAAlC,EAAqDC,SAArD;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,MAAMC,KAAK,GAAGf,oBAAoB,EAAlC;AAEA,MAAMgB,aAAa,GAAG;AAClBC,IAAAA,WAAW,EAAE;AADK,GAAtB;AAIAnB,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,KAAK,CAACF,SAAN;AACAE,IAAAA,KAAK,CAACL,SAAN;AACAK,IAAAA,KAAK,CAACJ,cAAN;AACAI,IAAAA,KAAK,CAACH,kBAAN;AACH,GALQ,EAKP,EALO,CAAT;AAOF,SACE,KAAC,mBAAD;AAAA,cACI,MAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,YAAlC;AAA+C,MAAA,aAAa,EAAEK,aAA9D;AAAA,iBACI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAgC,QAAA,SAAS,EAAET;AAA3C,QADJ,EAEI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEC;AAArC,QAFJ,EAGI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,eAAnB;AAAmC,QAAA,SAAS,EAAEL;AAA9C,QAHJ,EAII,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,aAAnB;AAAiC,QAAA,SAAS,EAAEC;AAA5C,QAJJ,EAKI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,gBAAnB;AAAoC,QAAA,SAAS,EAAEE;AAA/C,QALJ;AAAA;AADJ,IADF;AAWD,CAzBD;;AA2BA,IAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAcjB,kBAAkB,CAAC;AAAEO,IAAAA,SAAS,EAATA,SAAF;AAAYC,IAAAA,cAAc,EAAdA,cAAZ;AAA2BC,IAAAA,kBAAkB,EAAlBA,kBAA3B;AAA8CC,IAAAA,SAAS,EAATA;AAA9C,GAAD,EAA4DO,QAA5D,CAAhC;AAAA,CAAzB;;AAEA,eAAelB,OAAO,CAAC,IAAD,EAAOiB,gBAAP,CAAP,CAAgCL,aAAhC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { connect } from 'react-redux';\r\nimport {  bindActionCreators } from 'redux';\r\n\r\nimport NewPostScren from './../../screens/NewPostScreen';\r\nimport LoginScreen from './../../screens/LoginScreen';\r\nimport SignupScreen from './../../screens/SignupScreen';\r\nimport CommentsScreen from '../../screens/CommentsScreen';\r\nimport BottomTabs from './BottomTabs';\r\nimport Save from '../Add/Save';\r\nimport { fetchUser,fetchUserPosts,fetchUserFollowing,clearData } from '../../redux/actions/index';\r\n\r\nconst SignedInStack = (props) => {\r\n    const Stack = createStackNavigator();\r\n    \r\n    const screenOptions = {\r\n        headerShown: false\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.clearData();\r\n        props.fetchUser();\r\n        props.fetchUserPosts();\r\n        props.fetchUserFollowing();        \r\n    },[])\r\n\r\n  return (\r\n    <NavigationContainer>\r\n        <Stack.Navigator initialRouteName='BottomTabs' screenOptions={screenOptions}>\r\n            <Stack.Screen name=\"BottomTabs\" component={BottomTabs} />\r\n            <Stack.Screen name=\"Save\" component={Save} />\r\n            <Stack.Screen name=\"NewPostScreen\" component={NewPostScren} />            \r\n            <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\r\n            <Stack.Screen name=\"CommentsScreen\" component={CommentsScreen} />        \r\n        </Stack.Navigator>\r\n    </NavigationContainer>    \r\n  )\r\n}\r\n\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUser,fetchUserPosts,fetchUserFollowing,clearData }, dispatch);\r\n  \r\nexport default connect(null, mapDispatchProps)(SignedInStack)"]},"metadata":{},"sourceType":"module"}