{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useEffect } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as Notifications from 'expo-notifications';\nimport HomeScreen from \"../../screens/HomeScreen\";\nimport Media from \"../Add/Media\";\nimport NewPostScreen from \"../../screens/NewPostScreen\";\nimport ProfileScreen from \"../../screens/ProfileScreen\";\nimport CommentsScreen from \"../../screens/CommentsScreen\";\nimport { auth, db } from \"../../firebase\";\nimport Search from \"../home/Search\";\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nfunction BottomTabs(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentLoggedInUser = _useState2[0],\n      setCurrentLoggedInUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      unreadChats = _useState4[0],\n      setUnreadChats = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastNot = _useState6[0],\n      setLastNot = _useState6[1];\n\n  var lastNotificationResponse = Notifications.useLastNotificationResponse();\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        try {\n          var docRef = doc(db, \"users\", user.uid);\n          return onSnapshot(docRef, function (doc) {\n            if (doc.exists()) {\n              setCurrentLoggedInUser({\n                username: doc.data().username,\n                profilePicture: doc.data().profile_picture,\n                email: user.email\n              });\n            }\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarShowLabel: false,\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: '#000',\n        borderTopColor: '#ddd'\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          return focused ? _jsx(Image, {\n            source: require(\"../../assets/home.png\"),\n            style: [styles.icon, styles.activeTab]\n          }) : _jsx(Image, {\n            source: require(\"../../assets/home-inactive.png\"),\n            style: styles.icon\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: Search,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          return focused ? _jsx(Image, {\n            source: require(\"../../assets/search.png\"),\n            style: [styles.icon, styles.activeTab]\n          }) : _jsx(Image, {\n            source: require(\"../../assets/search-inactive.png\"),\n            style: styles.icon\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Media\",\n      component: Media,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n              color = _ref4.color,\n              size = _ref4.size;\n          return focused ? _jsx(Image, {\n            source: require(\"../../assets/plus-2-math.png\"),\n            style: [styles.icon, styles.activeTab]\n          }) : _jsx(Image, {\n            source: require(\"../../assets/plus-2-math.png\"),\n            style: styles.icon\n          });\n        }\n      }\n    }), currentLoggedInUser && _jsx(Tab.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      listeners: function listeners(_ref5) {\n        var navigation = _ref5.navigation;\n        return {\n          tabPress: function tabPress(event) {\n            event.preventDefault();\n            navigation.navigate(\"BottomTabs\", {\n              screen: \"ProfileScreen\",\n              params: {\n                uid: auth.currentUser.uid\n              }\n            });\n          }\n        };\n      },\n      options: {\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var focused = _ref6.focused,\n              color = _ref6.color,\n              size = _ref6.size;\n          return _jsx(Image, {\n            source: {\n              uri: currentLoggedInUser.profilePicture\n            },\n            style: styles.profilePic\n          });\n        }\n      }\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  icon: {\n    width: 30,\n    height: 30\n  },\n  profilePic: {\n    width: 40,\n    height: 40,\n    borderRadius: 50,\n    borderWidth: 2,\n    borderColor: '#fff'\n  }\n});\nexport default BottomTabs;","map":{"version":3,"sources":["C:/Users/sim2a/Documents/codes/instagram-clone/components/navigation/BottomTabs.js"],"names":["React","useState","useEffect","createBottomTabNavigator","Notifications","HomeScreen","Media","NewPostScreen","ProfileScreen","CommentsScreen","auth","db","Search","doc","onSnapshot","onAuthStateChanged","Tab","BottomTabs","navigation","user","currentLoggedInUser","setCurrentLoggedInUser","unreadChats","setUnreadChats","lastNot","setLastNot","lastNotificationResponse","useLastNotificationResponse","unsubscribe","docRef","uid","exists","username","data","profilePicture","profile_picture","email","error","console","log","tabBarShowLabel","headerShown","tabBarStyle","backgroundColor","borderTopColor","tabBarIcon","focused","color","size","require","styles","icon","activeTab","tabPress","event","preventDefault","navigate","screen","params","currentUser","uri","profilePic","StyleSheet","create","container","flexDirection","width","height","borderRadius","borderWidth","borderColor"],"mappings":"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","sourcesContent":["\r\nimport { StyleSheet, Image } from 'react-native'\r\nimport React,{ useState,useEffect } from 'react'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\nimport * as Notifications from 'expo-notifications';\r\n\r\nimport HomeScreen from '../../screens/HomeScreen';\r\nimport Media from '../Add/Media'\r\nimport NewPostScreen from '../../screens/NewPostScreen';\r\nimport ProfileScreen from '../../screens/ProfileScreen';\r\nimport CommentsScreen from '../../screens/CommentsScreen';\r\n\r\nimport { auth, db } from '../../firebase';\r\nimport Search from '../home/Search';\r\nimport { doc,onSnapshot } from 'firebase/firestore';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction BottomTabs({navigation,user}) {\r\n  const [currentLoggedInUser,setCurrentLoggedInUser] = useState(null)\r\n  const [unreadChats, setUnreadChats] = useState(false)\r\n  const [lastNot, setLastNot] = useState(false)\r\n\r\n  const lastNotificationResponse = Notifications.useLastNotificationResponse();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n        if (user) {     \r\n            try {\r\n                const docRef = doc(db, \"users\", user.uid);\r\n    \r\n                return onSnapshot(docRef,doc => {   \r\n                    if (doc.exists()){\r\n                        setCurrentLoggedInUser({\r\n                            username: doc.data().username,\r\n                            profilePicture: doc.data().profile_picture,\r\n                            email: user.email\r\n                        })  \r\n                    }         \r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }     \r\n        }\r\n      });\r\n\r\n      return unsubscribe;\r\n  },[])\r\n\r\n\r\n  return (    \r\n    <Tab.Navigator\r\n        screenOptions={{\r\n            tabBarShowLabel: false,\r\n            headerShown: false,\r\n            tabBarStyle: {\r\n                backgroundColor: '#000',\r\n                borderTopColor: '#ddd' \r\n            }\r\n        }}\r\n    >\r\n        <Tab.Screen \r\n            name=\"Home\" \r\n            component={HomeScreen} \r\n            options={{  \r\n                tabBarIcon: ({ focused, color, size }) => (\r\n                    focused ? \r\n                      <Image source={require('../../assets/home.png')} style={[styles.icon,styles.activeTab]} />\r\n                    : <Image source={require('../../assets/home-inactive.png')} style={styles.icon} />\r\n                )\r\n            }}\r\n        />\r\n\r\n        <Tab.Screen \r\n            name=\"Search\" \r\n            component={Search} \r\n            options={{  \r\n                tabBarIcon: ({ focused, color, size }) => (\r\n                    focused ? \r\n                      <Image source={require('../../assets/search.png')} style={[styles.icon,styles.activeTab]} />\r\n                    : <Image source={require('../../assets/search-inactive.png')} style={styles.icon} />\r\n                )\r\n            }}\r\n        />\r\n\r\n        <Tab.Screen \r\n            name=\"Media\" \r\n            component={Media} \r\n            options={{  \r\n                tabBarIcon: ({ focused, color, size }) => (\r\n                    focused ? \r\n                      <Image source={require('../../assets/plus-2-math.png')} style={[styles.icon,styles.activeTab]} />\r\n                    : <Image source={require('../../assets/plus-2-math.png')} style={styles.icon} />\r\n                )\r\n            }}            \r\n        />\r\n\r\n        {\r\n            currentLoggedInUser &&\r\n            <Tab.Screen \r\n                name=\"ProfileScreen\"\r\n                component={ProfileScreen}                \r\n                listeners={({ navigation }) => ({\r\n                    tabPress: event => {\r\n                        event.preventDefault();\r\n                        navigation.navigate(\"BottomTabs\",{screen: \"ProfileScreen\",params: {uid: auth.currentUser.uid}})\r\n                    }\r\n                })}\r\n                options={{  \r\n                    tabBarIcon: ({ focused, color, size }) => (                     \r\n                        <Image source={{uri: currentLoggedInUser.profilePicture}} style={styles.profilePic} />\r\n                    )\r\n                }}\r\n            />\r\n        }        \r\n    </Tab.Navigator>    \r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row'\r\n    },\r\n    icon: {\r\n        width: 30,\r\n        height: 30\r\n    },\r\n    profilePic: {\r\n        width: 40,\r\n        height: 40,\r\n        borderRadius: 50,\r\n        borderWidth: 2,\r\n        borderColor: '#fff'\r\n    }\r\n})\r\n\r\nexport default BottomTabs;\r\n"]},"metadata":{},"sourceType":"module"}