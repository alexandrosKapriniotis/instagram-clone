{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Search = function Search(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var fetchUsers = function fetchUsers(search) {\n    var usersRef = collection(db, \"users\");\n    var q = query(usersRef, where(\"username\", \">=\", search));\n    getDocs(q).then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    }).catch(function (err) {\n      console.error(\"Failed to retrieve data\", err);\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.searchContainer,\n      children: [_jsx(MaterialCommunityIcons, {\n        name: \"magnify\",\n        style: styles.icon,\n        color: \"#FFF\"\n      }), _jsx(TextInput, {\n        placeholder: \"Search\",\n        style: styles.input,\n        onChangeText: function onChangeText(search) {\n          return fetchUsers(search);\n        }\n      })]\n    }), _jsx(FlatList, {\n      numColumns: 1,\n      horizontal: false,\n      data: users,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate('BottomTabs', {\n              screen: \"ProfileScreen\",\n              params: {\n                uid: item.owner_uid\n              }\n            });\n          },\n          children: _jsx(Text, {\n            children: item.username\n          })\n        });\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flex: 1\n  },\n  searchContainer: {\n    backgroundColor: \"#ddd\",\n    borderRadius: 20,\n    marginHorizontal: 10,\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  },\n  icon: {\n    fontSize: 20,\n    marginHorizontal: 10\n  },\n  input: {}\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/sim2a/Documents/codes/instagram-clone/components/home/Search.js"],"names":["React","useState","collection","query","where","getDocs","db","MaterialCommunityIcons","Search","props","users","setUsers","fetchUsers","search","usersRef","q","then","snapshot","docs","map","doc","data","id","catch","err","console","error","styles","container","searchContainer","icon","input","item","navigation","navigate","screen","params","uid","owner_uid","username","StyleSheet","create","backgroundColor","flex","borderRadius","marginHorizontal","alignItems","flexDirection","fontSize"],"mappings":"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","sourcesContent":["import { View, Text, TextInput, FlatList,StyleSheet, TouchableOpacity } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { collection, query, where,getDocs } from \"firebase/firestore\";\r\n\r\nimport { db } from '../../firebase'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nconst Search = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const fetchUsers = (search) => {\r\n    const usersRef = collection(db, \"users\");\r\n\r\n    const q = query(usersRef, where(\"username\", \">=\", search));\r\n\r\n    getDocs(q).then((snapshot) => {\r\n        let users = snapshot.docs.map(doc => {\r\n            const data = doc.data();\r\n            const id = doc.id;\r\n            return { id, ...data }\r\n        })   \r\n        setUsers(users);\r\n                     \r\n    }).catch((err) => {\r\n        console.error(\"Failed to retrieve data\", err);\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <MaterialCommunityIcons name='magnify' style={styles.icon} color='#FFF' />\r\n        <TextInput placeholder='Search' style={styles.input} onChangeText={(search) => fetchUsers(search)} />\r\n      </View>  \r\n      \r\n      <FlatList \r\n        numColumns={1}\r\n        horizontal={false}\r\n        data={users}\r\n        renderItem={({item}) => (\r\n            <TouchableOpacity \r\n                onPress={() => props.navigation.navigate('BottomTabs',{screen: \"ProfileScreen\",params: {uid: item.owner_uid}})}\r\n            >\r\n                <Text>{item.username}</Text>\r\n            </TouchableOpacity>\r\n        )}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: '#fff',\r\n      flex: 1\r\n    },\r\n    searchContainer: {\r\n        backgroundColor: \"#ddd\",\r\n        borderRadius: 20,\r\n        marginHorizontal: 10,\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\"\r\n    },\r\n    icon: {        \r\n        fontSize: 20,\r\n        marginHorizontal: 10\r\n    },\r\n    input: {\r\n    }\r\n  })\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}