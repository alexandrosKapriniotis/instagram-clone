{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Screen from \"./components/Screen\";\nimport { auth } from \"./firebase\";\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport SignedInStack from \"./components/navigation/SignedInStack\";\nimport SignedoutStack from \"./components/navigation/SignedoutStack\";\nimport rootReducer from \"./redux/reducers\";\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction App() {\n  var store = createStore(rootReducer, applyMiddleware(thunk));\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  onAuthStateChanged(auth, function (user) {\n    if (user) {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  });\n  return _jsx(Screen, {\n    children: loggedIn ? _jsx(Provider, {\n      store: store,\n      children: _jsx(SignedInStack, {})\n    }) : _jsx(SignedoutStack, {})\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/sim2a/Documents/codes/instagram-clone/App.js"],"names":["React","useState","Screen","auth","Provider","applyMiddleware","createStore","thunk","SignedInStack","SignedoutStack","rootReducer","onAuthStateChanged","App","store","loggedIn","setLoggedIn","user"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP;AACA,SAASC,IAAT;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,SAASC,kBAAT,QAAmC,eAAnC;;;AAEA,SAASC,GAAT,GAAe;AACb,MAAMC,KAAK,GAAGP,WAAW,CAACI,WAAD,EAAcL,eAAe,CAACE,KAAD,CAA7B,CAAzB;;AACA,kBAA+BN,QAAQ,CAAC,KAAD,CAAvC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAgBC,WAAhB;;AAEAJ,EAAAA,kBAAkB,CAACR,IAAD,EAAO,UAACa,IAAD,EAAU;AACjC,QAAIA,IAAJ,EAAU;AACRD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GANiB,CAAlB;AAQA,SACE,KAAC,MAAD;AAAA,cAEID,QAAQ,GACN,KAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA,gBACE,KAAC,aAAD;AADF,MADM,GAIJ,KAAC,cAAD;AANR,IADF;AAWD;;AAGD,eAAeD,GAAf","sourcesContent":["import React,{ useState } from 'react';\r\nimport Screen from './components/Screen';\r\nimport { auth } from './firebase'\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport SignedInStack from './components/navigation/SignedInStack';\r\nimport SignedoutStack from './components/navigation/SignedoutStack';\r\nimport rootReducer from './redux/reducers'\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n \r\nfunction App() {\r\n  const store = createStore(rootReducer, applyMiddleware(thunk))\r\n  const [loggedIn,setLoggedIn] = useState(false)\r\n\r\n  onAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n      setLoggedIn(true)\r\n    } else {\r\n      setLoggedIn(false)\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Screen>                      \r\n      {\r\n        loggedIn ? \r\n          <Provider store={store}>\r\n            <SignedInStack />\r\n          </Provider> \r\n          : <SignedoutStack />\r\n      }               \r\n    </Screen>      \r\n  );\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}